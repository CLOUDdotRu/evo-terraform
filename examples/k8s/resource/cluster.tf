resource "cloudru_k8s_cluster" "example-cluster" {
  # NOTE: Обязательный параметр.
  # Название кластера.
  # Может содержать буквы, цифры, дефис, подчеркивание.
  # Допустимое количество символов от 3 до 60.
  name = "example-cluster"

  # NOTE: Это опциональный параметр, если указан project_id в конфигурации провайдера.
  # Если project_id не указан в конфигурации провайдера или его требуется переопределить, то project_id должен быть указан.
  # Идентификатор проекта.
  # project_id = "00000000-0000-0000-0000-000000000000"

  # NOTE: Обязательный параметр.
  # Конфигурация плоскости управления.
  control_plane = {

    # NOTE: Опциональный параметр.
    # Указывает в каких зонах будут размещены узлы управления.
    # Доступен к получению через datasource cloudru_k8s_zone_flavors.
    zones = [
      "00000000-0000-0000-0000-000000000000",
    ]

    # NOTE: Обязательный параметр.
    # Количество узлов плоскости управления.
    count = 1

    # NOTE: Обязательный параметр.
    # Тип узла плоскости управления.
    type = "MASTER_TYPE_SMALL"

    # NOTE: Обязательный параметр.
    # Версия Kubernetes.
    version = "v1.29.9"
  }

  # NOTE: Обязательный параметр.
  # Описание сетевой инфраструктуры кластера.
  network_configuration = {

    # NOTE: Обязательный параметр.
    # Адрес подсети сервисов.
    # Не должен пересекаться с подовой сетью или сетью узлов.
    services_subnet_cidr = "10.0.0.0/20"

    # NOTE: Обязательный параметр, если не указан параметр nodes_subnet_id.
    # Адрес подсети узлов плоскости управления.
    # Не должен пересекаться с сетью сервисов или сетью подов.
    nodes_subnet_cidr = "192.168.20.0/24"

    # NOTE: Обязательный параметр., если не указан nodes_subnet_cidr.
    # Идентификатор существующей сети узлов. Указывается либо он либо nodes_subnet_cidr.
    # nodes_subnet_id = "00000000-0000-0000-0000-000000000000"

    # NOTE: Обязательный параметр.
    # Адрес подсети подов.
    # Не должен пересекаться с сетью сервисов или сетью узлов.
    pods_subnet_cidr = "172.16.0.0/12"

    # NOTE: Обязательный параметр.
    # Публикация kube-apiserver в интернет.
    kube_api_internet = true
  }

  # NOTE: Опциональный параметр.
  # Конфигурация сервисного аккаунта кластера, который используется для интеграции с сервисами облака Evolution. Например, с Artifact Registry, Object Storage, сервисами логирования и мониторинга.
  # identity_configuration = {

  # NOTE: Обязательный параметр.
  # Идентификатор сервисного аккаунта.
  # ID можно скопировать в личном кабинете из URL на странице сервисного аккаунта или получить через API.
  # Подробнее: https://cloud.ru/docs/console_api/ug/topics/guides__service_accounts_view.html 
  #   cluster_sa_id = "00000000-0000-0000-0000-000000000000"
  # }

  # NOTE: Опциональный параметр.
  # Логирование событий компонентов кластера.
  # logging_service = {

  # NOTE: Опциональный параметр.
  # Включение/выключение логирования событий компонентов кластера.
  # Возможные значения: true — логирование включено, false — логирование выключено.
  # По умолчанию логирование включено.
  # Если установлен параметр false, настройки лог-группы игнорируются.
  # enabled = true

  # NOTE: Опциональный параметр.
  # Идентификатор лог-группы.
  # Если не указывается, используется значение по умолчанию.
  # log_group_id = "00000000-0000-0000-0000-000000000000"
  # }

  # NOTE: Опциональный параметр.
  # Мониторинг компонентов кластера.
  # monitoring_service = {

  # NOTE: Опциональный параметр.
  # Включение/выключение мониторинга компонентов кластера.
  # Возможные значения: true — мониторинг включен, false — мониторинг выключен.
  # По умолчанию мониторинг включен.
  # enabled = true
  # }

  # NOTE: Опциональный параметр.
  # Аудит-логирование событий компонентов кластера.
  # audit_service = {

  # NOTE: Опциональный параметр.
  # Включение/выключение аудит-логирования событий компонентов кластера.
  # Возможные значения: true — аудит-логирование включено, false — аудит-логирование выключено.
  # По умолчанию аудит-логирование включено.
  # enabled = true
  # }

  # NOTE: Опциональный параметр.
  # Релизный канал, на который подписан кластер.
  # Должен быть один из: RELEASE_CHANNEL_REGULAR, RELEASE_CHANNEL_RAPID,  RELEASE_CHANNEL_STABLE.
  # release_channel = "RELEASE_CHANNEL_STABLE".

  # NOTE: Опциональный параметр
  timeouts = {

    # NOTE: Опциональный параметр.
    # Ограничение по времени создания объекта.
    # Если объект не успел создаться за указанное время, то вернется ошибка, при этом автоматического удаления не последует.
    # Время создания плоскости управления кластера в числе прочих факторов зависит и от количество узлов. Чем больше узлов, тем дольше группа узлов будет создаваться.
    create = "40m"

    # NOTE: Опциональный параметр.
    # Ограничение по времени получения объекта.
    read = "15s"

    # NOTE: Опциональный параметр.
    # Ограничение по времени редактирования объекта.
    update = "30m"

    # NOTE: Опциональный параметр.
    # Ограничение по времени удаления объекта.
    delete = "30m"
  }

  # NOTE: Опциональный параметр.
  # Идентификатор кластера.
  # id         = "00000000-0000-0000-0000-000000000000"

  # NOTE: Опциональный параметр.
  # Идентификатор задачи, связанной с кластером.
  # task_id = "00000000-0000-0000-0000-000000000000"

  # NOTE: Опциональный параметр.
  # Состояние кластера.
  # state = "OBJECT_STATE_RUNNING"
}


